"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updatePkg = void 0;
function appendScript(pkg, scriptName, cmd) {
    pkg.scripts || (pkg.scripts = {});
    if (pkg.scripts[scriptName] !== undefined) {
        if (pkg.scripts[scriptName].includes(cmd)) {
            console.log(`  "${cmd}" command already exists in ${scriptName} script, skipping.`);
        }
        else {
            console.log(`  appending "${cmd}" command to ${scriptName} script`);
            pkg.scripts[scriptName] += ` && ${cmd}`;
        }
    }
    else {
        console.log(`  setting ${scriptName} script to command "${cmd}"`);
        pkg.scripts[scriptName] = cmd;
    }
}
function updatePkg(pkg, isYarn2) {
    pkg.devDependencies || (pkg.devDependencies = {});
    pkg.devDependencies.husky = '^8.0.0';
    if (isYarn2) {
        pkg.scripts || (pkg.scripts = {});
        appendScript(pkg, 'postinstall', 'husky install');
        if (pkg.private !== true) {
            appendScript(pkg, 'prepack', 'pinst --disable');
            appendScript(pkg, 'postpack', 'pinst --enable');
            pkg.devDependencies.pinst = '^3.0.0';
        }
    }
    else {
        pkg.scripts || (pkg.scripts = {});
        appendScript(pkg, 'prepare', 'husky install');
    }
    return pkg;
}
exports.updatePkg = updatePkg;
